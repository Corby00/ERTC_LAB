% -------------------------------------------------------------------------
% EMBEDDED AND REAL TIME CONTROL: GROUP 5
% Components: Azadegan, Corbioli, Fusari, Garbo
%
% Script for plotting the acquired data on LAB4
%--------------------------------------------------------------------------


%% PART 1: PLOT OF ALL RAW DATA

close all;
clear all;
clc;

timeStep = 0.01;

ToRawDataPlot = false;       % Wether to plot raw data figures or not.
ToReportPlot = false;        % Wether to plot report figures or not.
Toprint = false;            % Wether to print report figures or not.


load("LABData\LAB4_autocross1.mat");

% Data taken quite good, some troubles on recognizing turns. Controller a
% lot nervous. Circuit completed very slowly. This snapshot was taken with
% the very first controller.

% On [11; 11.5] turn 8
% On [12.5, 13.5] turn 9
% On [14.5, 15.5] turn 10
% On [16, 17.5] turn 11
% On [17.5; 19.5] turn 12
% On [23; 24.5] turn 1
% On [24.5; 26] turn 2
% On [26; 27.2] turn 3
% On [28; 29] turn 4
% On [29.5; 30] turn 5
% On [31.5; 33] turn 6
% On [36.5; 37.7] tur 7
% On [38.5; 40] turn 8

Autocross1 = data;

time = data.time;
motor1Speed = data.out{1,1};
motor2Speed = data.out{2,1};
ControlAction = data.out{3,1};
Error = data.out{4,1};

f1 = figure(1);
f1.Name= "LAB4_autocross1";

subplot(411);
plot(time, motor1Speed);
xlabel("time [s]");
ylabel("Motor1 Speed [rad/s]");
grid on;

subplot(412);
plot(time, motor2Speed);
xlabel("time [s]");
ylabel("Motor2 Speed [rad/s]");
grid on;

subplot(413);
hold on;
plot(time, ControlAction);
xlabel("time [s]");
ylabel("Control action [V]");
legend('Mot1ContAction', 'Mot2ContAction');
grid on;

subplot(414);
hold on;
plot(time, Error);
xlabel("time [s]");
ylabel("Error");
grid on;

%--------------------------------------------------------------------------

load("LABData\LAB4_autocross_profContr.mat");

% Data taken quite bad. There is a missing sending data from 24s to 33s
% circa, and also a awful peak in motor 1 at 9.08s.

% Despite everything, still something can be recovered, in particular,
% since first approach, the controller has still to be tuned and this can
% be observed by the fact that it is very nervous.

% In the folder of LAB4 there is a png where a the turns are tried to be
% retrivered. 

Autocross_pC = data;

time = data.time;
motor1Speed = data.out{1,1};
motor2Speed = data.out{2,1};
ControlAction = data.out{3,1};
Error = data.out{4,1};

f2 = figure(2);
f2.Name= savename;

subplot(411);
plot(time, motor1Speed);
xlabel("time [s]");
ylabel("Motor1 Speed [rad/s]");
grid on;

subplot(412);
plot(time, motor2Speed);
xlabel("time [s]");
ylabel("Motor2 Speed [rad/s]");
grid on;

subplot(413);
hold on;
plot(time, ControlAction);
xlabel("time [s]");
ylabel("Control action [V]");
legend('Mot1ContAction', 'Mot2ContAction');
grid on;

subplot(414);
hold on;
plot(time, Error);
xlabel("time [s]");
ylabel("Error");
grid on;

%--------------------------------------------------------------------------

load("LABData\LAB4_autocross_profContr_FC_wAntiWindUp.mat");

% Data taken very well, everything fine.

% 'LAB4_autocross_profContr_FC_wAntiWindUp'from 18s to 38-40s;

% On time [4; 5] done turns 9 and 10
% All the other turns can be retrived very easily

Autocross_pC_FC_wAW = data;

time = data.time;
motor1Speed = data.out{1,1};
motor2Speed = data.out{2,1};
ControlAction = data.out{3,1};
Error = data.out{4,1};

f3 = figure(3);
f3.Name= savename;

subplot(411);
plot(time, motor1Speed);
xlabel("time [s]");
ylabel("Motor1 Speed [rad/s]");
grid on;

subplot(412);
plot(time, motor2Speed);
xlabel("time [s]");
ylabel("Motor2 Speed [rad/s]");
grid on;

subplot(413);
hold on;
plot(time, ControlAction);
xlabel("time [s]");
ylabel("Control action [V]");
legend('Mot1ContAction', 'Mot2ContAction');
grid on;

subplot(414);
hold on;
plot(time, Error);
xlabel("time [s]");
ylabel("Error");
grid on;

%--------------------------------------------------------------------------

load("LABData\LAB4_autocross_profContr_FC_wAW_04speed.mat");


% Data taken very well, everything fine.

% 'LAB4_autocross_profContr_FC_wAW_04speed' from 37s to 55s;

% This is the fastest lap achieved without using adaptive controller.
% The turns can be recognized very easily and also the mean speed is very
% high, while in turning, the inner wheel is almost blocked.

% [15; 17] turns 9-10

Autocross_pC_FC_wAW_04 = data;

time = data.time;
motor1Speed = data.out{1,1};
motor2Speed = data.out{2,1};
ControlAction = data.out{3,1};
Error = data.out{4,1};

f4 = figure(4);
f4.Name= savename;

subplot(411);
plot(time, motor1Speed);
xlabel("time [s]");
ylabel("Motor1 Speed [rad/s]");
grid on;

subplot(412);
plot(time, motor2Speed);
xlabel("time [s]");
ylabel("Motor2 Speed [rad/s]");
grid on;

subplot(413);
hold on;
plot(time, ControlAction);
xlabel("time [s]");
ylabel("Control action [V]");
legend('Mot1ContAction', 'Mot2ContAction');
grid on;

subplot(414);
hold on;
plot(time, Error);
xlabel("time [s]");
ylabel("Error");
grid on;

%--------------------------------------------------------------------------

load("LABData\LAB_skipad_profContr_wAntiWindUp.mat");

% Data taken very well, everything fine.

% 'LAB_skipad_profContr_wAntiWindUp', from circa 30s to 51s a lap

% This snapshot was taken with the saturation of the wheel speed to 0 as
% lower limit; however on right turns the inner wheel speed goes behind
% zero since it is forced to rotate. 

% Another lap in [15;31]

% In [15.5;16] and [31;32] First 90° right turn
% In [16;18]  small straightway 
% In [18.5;20] Second 90° right turn 
% In [22.5; 27.5] long right turn


Skipad_pC_FB_wAW = data;

time = data.time;
motor1Speed = data.out{1,1};
motor2Speed = data.out{2,1};
ControlAction = data.out{3,1};
Error = data.out{4,1};

f5 = figure(5);
f5.Name= savename;

subplot(411);
plot(time, motor1Speed);
xlabel("time [s]");
ylabel("Motor1 Speed [rad/s]");
grid on;

subplot(412);
plot(time, motor2Speed);
xlabel("time [s]");
ylabel("Motor2 Speed [rad/s]");
grid on;

subplot(413);
hold on;
plot(time, ControlAction);
xlabel("time [s]");
ylabel("Control action [V]");
legend('Mot1ContAction', 'Mot2ContAction');
grid on;

subplot(414);
hold on;
plot(time, Error);
xlabel("time [s]");
ylabel("Error");
grid on;

%--------------------------------------------------------------------------

load("LABData\LAB_skipad_profContr_FC_wAntiWindUp.mat");

% Data taken very well, everything fine.
% LAB_skipad_profContr_FC_wAntiWindUp from 25s to 41s a lap

% Also another lap can be recognized in 10s to 26s 

% In [10;12] and [26;28] small straightway 
% In [12;14] and [28;30] Second 90° right turn 
% In [16; 21] and [31.5;37.5] long right turn
% In [24:26] and [40;42] First 90° right turn

% With respect to FB, this with FC is less jittery (nervous), this can be
% noticed by the fact that it has less correction (Lower peaks frequency),
% for example in the long right turn (turn 3).
% However with FC, the control action is more jittery (higher correction
% frequency). and also the amplitude of oscillations is greater on FC.

Skipad_pC_FC_wAW = data;

time = data.time;
motor1Speed = data.out{1,1};
motor2Speed = data.out{2,1};
ControlAction = data.out{3,1};
Error = data.out{4,1};

f6 = figure(6);
f6.Name= savename;

subplot(411);
plot(time, motor1Speed);
xlabel("time [s]");
ylabel("Motor1 Speed [rad/s]");
grid on;

subplot(412);
plot(time, motor2Speed);
xlabel("time [s]");
ylabel("Motor2 Speed [rad/s]");
grid on;

subplot(413);
hold on;
plot(time, ControlAction);
xlabel("time [s]");
ylabel("Control action [V]");
legend('Mot1ContAction', 'Mot2ContAction');
grid on;

subplot(414);
hold on;
plot(time, Error);
xlabel("time [s]");
ylabel("Error");
grid on;

%--------------------------------------------------------------------------

load("LABData\LAB_skipad_profContr_FC_wAW_04speed.mat");

% IT IS NOT POSSIBLE TO SEE ANYTHING. USELESS. TO AVOID

Skipad_pC_FC_wAW_04 = data;

time = data.time;
motor1Speed = data.out{1,1};
motor2Speed = data.out{2,1};
ControlAction = data.out{3,1};
Error = data.out{4,1};

f7 = figure(7);
f7.Name= savename;

subplot(411);
plot(time, motor1Speed);
xlabel("time [s]");
ylabel("Motor1 Speed [rad/s]");
grid on;

subplot(412);
plot(time, motor2Speed);
xlabel("time [s]");
ylabel("Motor2 Speed [rad/s]");
grid on;

subplot(413);
hold on;
plot(time, ControlAction);
xlabel("time [s]");
ylabel("Control action [V]");
legend('Mot1ContAction', 'Mot2ContAction');
grid on;

subplot(414);
hold on;
plot(time, Error);
xlabel("time [s]");
ylabel("Error");
grid on;

%--------------------------------------------------------------------------

load("LABData\LAB_skipad_profContr_FC_wAW_06speed_adaptiveCont_record.mat");

% Data taken very well, everything fine.
% 'LAB_skipad_profContr_FC_wAW_06speed_adaptiveCont_record' from 10 to 19.5 lap
% In [11;12] First 90° right turn 
% In [12;13] small straightway 
% In [13:14] Second 90° right turn
% In [6.5; 9.5] and [16; 19] long right turn

Skipad_pC_FC_wAW_06_adaptiveControl = data;

time = data.time;
motor1Speed = data.out{1,1};
motor2Speed = data.out{2,1};
ControlAction = data.out{3,1};
Error = data.out{4,1};

f8 = figure(8);
f8.Name= savename;

subplot(411);
plot(time, motor1Speed);
xlabel("time [s]");
ylabel("Motor1 Speed [rad/s]");
grid on;

subplot(412);
plot(time, motor2Speed);
xlabel("time [s]");
ylabel("Motor2 Speed [rad/s]");
grid on;

subplot(413);
hold on;
plot(time, ControlAction);
xlabel("time [s]");
ylabel("Control action [V]");
legend('Mot1ContAction', 'Mot2ContAction');
grid on;

subplot(414);
hold on;
plot(time, Error);
xlabel("time [s]");
ylabel("Error");
grid on;

%--------------------------------------------------------------------------

load("LABData\LAB4_autocross_profContr_FC_wAW_06speed_adaptiveCont_record.mat");  

%IT IS NOT POSSIBLE TO SEE ANYTHING. USELESS. TO AVOID

Autocross_pC_FC_wAW_06_adaptiveControl = data;

time = data.time;
motor1Speed = data.out{1,1};
motor2Speed = data.out{2,1};
ControlAction = data.out{3,1};
%Error = data.out{4,1};

f9 = figure(9);
f9.Name= savename;

subplot(411);
plot(time, motor1Speed);
xlabel("time [s]");
ylabel("Motor1 Speed [rad/s]");
grid on;

subplot(412);
plot(time, motor2Speed);
xlabel("time [s]");
ylabel("Motor2 Speed [rad/s]");
grid on;

subplot(413);
hold on;
plot(time, ControlAction);
xlabel("time [s]");
ylabel("Control action [V]");
legend('Mot1ContAction', 'Mot2ContAction');
grid on;

% subplot(414);
% hold on;
% plot(time, Error);
% xlabel("time [s]");
% ylabel("Error");
% grid on;

%--------------------------------------------------------------------------
if(not(ToRawDataPlot))
	close all;
end

%% PLOTS WELL DONE FOR REPORT

% Note: When creating a figure, in order to avoid anypossible errror of
% rewriting previously created figures, all the plots for the report has
% number higher than 1000.

%--------------------------------------------------------------------------
% AUTOCROSS SILLY CONTROLLER
%--------------------------------------------------------------------------

f1010 = figure(1010);
f1010.WindowState = 'maximized';
pause(1);
f1010.Name = 'LinearController'; % It is also the name for saving the plot.

set(gcf,'defaultAxesTickLabelInterpreter','latex');

data = Autocross1;

time = data.time;

% Filtering the data for time included in [minTime; maxTime]
minTime = 0;
maxTime = 35;
lapStartTime=2;
lapEndTime =29;

index = find(time>minTime-timeStep & time<maxTime+timeStep);

time = time(index);
motor1Speed = data.out{1,1} (index);
motor2Speed = data.out{2,1}(index);
ControlAction = data.out{3,1}(:, index);
Error = data.out{4,1} (index);

if (ToReportPlot | Toprint)
	subplot(411);
	plot(time, motor1Speed, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Motor 1 Speed $[rad/s]$", "Interpreter","latex");
	xlim('tight');
	grid on;
	grid minor;
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)

	subplot(412);
	plot(time, motor2Speed, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Motor 2 Speed $[rad/s]$", "Interpreter","latex");
	grid on;
	grid minor;
	xlim('tight');
	ylim([0;20]);
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)

	subplot(413);
	hold on;
	plot(time, ControlAction, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Control Action $[V]$", "Interpreter","latex");
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	legend('Motor 1', 'Motor 2', "Interpreter","latex", "Location","best");
	grid on;
	set(gca, 'FontSize', 10)
	xlim('tight');

	subplot(414);
	hold on;
	plot(time, Error, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Error $e_{SL}$", "Interpreter","latex");
	grid on;	
	ylim([-0.03;0.03]);
	xlim('tight');
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)


	%sgtitle("\bfseries Tilt Angles", "Interpreter","latex") % Title for
	%the whole figure.
end

if (Toprint)
	plotName = ".\PlotOutput\" + f1010.Name + ".pdf";
	exportgraphics(gcf,plotName,'ContentType','vector')
end

%--------------------------------------------------------------------------
% SKIPAD YAW CONTROLLER
%--------------------------------------------------------------------------

f1002 = figure(1002);
f1002.WindowState = 'maximized';
pause(1);
f1002.Name = 'SCREEN_FC_skipad_Yaw_fig6'; % It is also the name for saving the plot.

set(gcf,'defaultAxesTickLabelInterpreter','latex');

data = Skipad_pC_FC_wAW;

time = data.time;

% Filtering the data for time included in [minTime; maxTime]
minTime = 8;
maxTime = 30;
lapStartTime=10.2;
lapEndTime =26;

index = find(time>minTime-timeStep & time<maxTime+timeStep);

time = time(index);
motor1Speed = data.out{1,1} (index);
motor2Speed = data.out{2,1}(index);
ControlAction = data.out{3,1}(:, index);
Error = data.out{4,1} (index);

if (ToReportPlot | Toprint)
	subplot(411);
	plot(time, motor1Speed, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Motor 1 Speed $[rad/s]$", "Interpreter","latex");
	xlim('tight');
	grid on;
	grid minor;
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)

	subplot(412);
	plot(time, motor2Speed, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Motor 2 Speed $[rad/s]$", "Interpreter","latex");
	grid on;
	grid minor;
	xlim('tight');
	ylim([0;20]);
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)

	subplot(413);
	hold on;
	plot(time, ControlAction, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Control Action $[V]$", "Interpreter","latex");
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	legend('Motor 1', 'Motor 2', "Interpreter","latex", "Location","best");
	grid on;
	set(gca, 'FontSize', 10)
	xlim('tight');

	subplot(414);
	hold on;
	plot(time, Error, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Error $e_{SL}$", "Interpreter","latex");
	grid on;	
	ylim([-0.03;0.03]);
	xlim('tight');
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)


	%sgtitle("\bfseries Tilt Angles", "Interpreter","latex") % Title for
	%the whole figure.
end

if (Toprint)
	plotName = ".\PlotOutput\" + f1002.Name + ".pdf";
	exportgraphics(gcf,plotName,'ContentType','vector')
end

%--------------------------------------------------------------------------


f1005 = figure(1005);
f1005.WindowState = 'maximized';
pause(1);
f1005.Name = 'SCREEN_FB_skipad_Yaw'; % It is also the name for saving the plot.

set(gcf,'defaultAxesTickLabelInterpreter','latex');

data = Skipad_pC_FB_wAW;

time = data.time;

% Filtering the data for time included in [minTime; maxTime]
minTime = 15;
maxTime = 36;
lapStartTime=16.2;
lapEndTime =32;

index = find(time>minTime-timeStep & time<maxTime+timeStep);

time = time(index);
motor1Speed = data.out{1,1} (index);
motor2Speed = data.out{2,1}(index);
ControlAction = data.out{3,1}(:, index);
Error = data.out{4,1} (index);

if (ToReportPlot | Toprint)
	subplot(411);
	plot(time, motor1Speed, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Motor 1 Speed $[rad/s]$", "Interpreter","latex");
	xlim('tight');
	grid on;
	grid minor;
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)

	subplot(412);
	plot(time, motor2Speed, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Motor 2 Speed $[rad/s]$", "Interpreter","latex");
	grid on;
	grid minor;
	xlim('tight');
	ylim([0;20]);
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)

	subplot(413);
	hold on;
	plot(time, ControlAction, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Control Action $[V]$", "Interpreter","latex");
	grid on;
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)
	legend('Motor 1', 'Motor 2', "Interpreter","latex", "Location","best");
	xlim('tight');

	subplot(414);
	hold on;
	plot(time, Error, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Error $e_{SL}$", "Interpreter","latex");
	grid on;	
	ylim([-0.03;0.03]);
	xlim('tight');
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)


	%sgtitle("\bfseries Tilt Angles", "Interpreter","latex") % Title for
	%the whole figure.
end

if (Toprint)
	plotName = ".\PlotOutput\" + f1005.Name + ".pdf";
	exportgraphics(gcf,plotName,'ContentType','vector')
end

%--------------------------------------------------------------------------

%--------------------------------------------------------------------------
% AUTOCROSS YAW CONTROLLER
%--------------------------------------------------------------------------

f1003 = figure(1003);
f1003.WindowState = 'maximized';
pause(1);
f1003.Name = 'SCREEN_FC_autocross_fig3'; % It is also the name for saving the plot.

set(gcf,'defaultAxesTickLabelInterpreter','latex');

data = Autocross_pC_FC_wAW;

time = data.time;

% Filtering the data for time included in [minTime; maxTime]
minTime = 15;
maxTime = 40;
lapStartTime=18;
lapEndTime =37;

index = find(time>minTime-timeStep & time<maxTime+timeStep);

time = time(index);
motor1Speed = data.out{1,1} (index);
motor2Speed = data.out{2,1}(index);
ControlAction = data.out{3,1}(:, index);
Error = data.out{4,1} (index);

if (ToReportPlot | Toprint)
	subplot(411);
	plot(time, motor1Speed, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Motor 1 Speed $[rad/s]$", "Interpreter","latex");
	xlim('tight');
	grid on;
	grid minor;
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)

	subplot(412);
	plot(time, motor2Speed, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Motor 2 Speed $[rad/s]$", "Interpreter","latex");
	grid on;
	grid minor;
	xlim('tight');
	ylim([0;20]);
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)

	subplot(413);
	hold on;
	plot(time, ControlAction, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Control Action $[V]$", "Interpreter","latex");
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	legend('Motor 1', 'Motor 2', "Interpreter","latex", "Location","best");
	grid on;
	set(gca, 'FontSize', 10)
	xlim('tight');

	subplot(414);
	hold on;
	plot(time, Error, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Error $e_{SL}$", "Interpreter","latex");
	grid on;	
	ylim([-0.03;0.03]);
	xlim('tight');
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)


	%sgtitle("\bfseries Tilt Angles", "Interpreter","latex") % Title for
	%the whole figure.
end

if (Toprint)
	plotName = ".\PlotOutput\" + f1003.Name + ".pdf";
	exportgraphics(gcf,plotName,'ContentType','vector')
end

%--------------------------------------------------------------------------

f1004 = figure(1004);
f1004.WindowState = 'maximized';
pause(1);
f1004.Name = 'SCREEN_FC_autocross_04_fig4'; % It is also the name for saving the plot.

set(gcf,'defaultAxesTickLabelInterpreter','latex');

data = Autocross_pC_FC_wAW_04;

time = data.time;

% Filtering the data for time included in [minTime; maxTime]
minTime = 15;
maxTime = 60;
lapStartTime=29;
lapEndTime =45;

index = find(time>minTime-timeStep & time<maxTime+timeStep);

time = time(index);
motor1Speed = data.out{1,1} (index);
motor2Speed = data.out{2,1}(index);
ControlAction = data.out{3,1}(:, index);
Error = data.out{4,1} (index);

if (ToReportPlot | Toprint)
	subplot(411);
	plot(time, motor1Speed, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Motor 1 Speed $[rad/s]$", "Interpreter","latex");
	xlim('tight');
	grid on;
	grid minor;
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)

	subplot(412);
	plot(time, motor2Speed, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Motor 2 Speed $[rad/s]$", "Interpreter","latex");
	grid on;
	grid minor;
	xlim('tight');
	ylim([0;20]);
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)

	subplot(413);
	hold on;
	plot(time, ControlAction, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Control Action $[V]$", "Interpreter","latex");
	grid on;
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)
	legend('Motor 1', 'Motor 2', "Interpreter","latex", "Location","best");
	xlim('tight');

	subplot(414);
	hold on;
	plot(time, Error, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Error $e_{SL}$", "Interpreter","latex");
	grid on;	
	ylim([-0.03;0.03]);
	xlim('tight');
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)


	%sgtitle("\bfseries Tilt Angles", "Interpreter","latex") % Title for
	%the whole figure.
end

if (Toprint)
	plotName = ".\PlotOutput\" + f1004.Name + ".pdf";
	exportgraphics(gcf,plotName,'ContentType','vector')
end

%--------------------------------------------------------------------------


%--------------------------------------------------------------------------
% SKIPAD ADAPTIVE CONTROLLER 
%--------------------------------------------------------------------------

f1001 = figure(1001);
f1001.WindowState = 'maximized';
pause(1);
f1001.Name = 'SKIPAD_ADAPTIVE_CONTROLLER'; % It is also the name for saving the plot.

set(gcf,'defaultAxesTickLabelInterpreter','latex');

data = Skipad_pC_FC_wAW_06_adaptiveControl;

time = data.time;

% Filtering the data for time included in [minTime; maxTime]
minTime = 0;
maxTime = 20;
lapStartTime=6.5;
lapEndTime =16;

index = find(time>minTime-timeStep & time<maxTime+timeStep);

time = time(index);
motor1Speed = data.out{1,1} (index);
motor2Speed = data.out{2,1}(index);
ControlAction = data.out{3,1}(:, index);
Error = data.out{4,1} (index);

if (ToReportPlot | Toprint)
	subplot(411);
	plot(time, motor1Speed, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Motor 1 Speed $[rad/s]$", "Interpreter","latex");
	grid on;
	grid minor;
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)

	subplot(412);
	plot(time, motor2Speed, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Motor 2 Speed $[rad/s]$", "Interpreter","latex");
	grid on;
	grid minor;
	ylim([0;20]);
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)

	subplot(413);
	hold on;
	plot(time, ControlAction, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Control Action $[V]$", "Interpreter","latex");
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	legend('Motor 1', 'Motor 2', "Interpreter","latex", "Location","best");
	grid on;
	set(gca, 'FontSize', 10)

	subplot(414);
	hold on;
	plot(time, Error, 'LineWidth', 1.15);
	xlabel("Time $t \, [s]$",  "Interpreter","latex");
	ylabel("Error $e_{SL}$", "Interpreter","latex");
	grid on;	
	ylim([-0.03;0.03]);
	hold on;
	xline(lapStartTime, '--k', 'LineWidth', 1.15);
	xline(lapEndTime, '--k', 'LineWidth', 1.15);
	set(gca, 'FontSize', 10)


	%sgtitle("\bfseries Tilt Angles", "Interpreter","latex") % Title for
	%the whole figure.
end

if (Toprint)
	plotName = ".\PlotOutput\" + f1001.Name + ".pdf";
	exportgraphics(gcf,plotName,'ContentType','vector')
end

%--------------------------------------------------------------------------
